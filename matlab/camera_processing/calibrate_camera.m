%% Extract frame form video
date = {'0429/', '0513/'};
a = VideoReader('/Users/jalpanchal/drive/penn/robo599/simulator_media/0513/calibration/gp_0513_calib_1.MP4');
out_path = "/Users/jalpanchal/drive/penn/robo599/simulator_media/0513/calibration/frames/";
for img = 1000:2000;
    filename=strcat(out_path,'frame',num2str(img),'_',date{2}(1:end-1),'.jpg');
    b = read(a, img);
%     imshow(b);
    imwrite(b,filename);
end

%%
% Auto-generated by cameraCalibrator app on 13-May-2021
%-------------------------------------------------------


% Define images to process
imageFileNames = {'/Users/jalpanchal/drive/penn/robo599/simulator_media/0513/calibration/frame23_0513.jpg',...
    '/Users/jalpanchal/drive/penn/robo599/simulator_media/0513/calibration/frame134_0513.jpg',...
    '/Users/jalpanchal/drive/penn/robo599/simulator_media/0513/calibration/frame255_0513.jpg',...
    '/Users/jalpanchal/drive/penn/robo599/simulator_media/0513/calibration/frame534_0513.jpg',...
    '/Users/jalpanchal/drive/penn/robo599/simulator_media/0513/calibration/frame584_0513.jpg',...
    '/Users/jalpanchal/drive/penn/robo599/simulator_media/0513/calibration/frame698_0513.jpg',...
    '/Users/jalpanchal/drive/penn/robo599/simulator_media/0513/calibration/frame879_0513.jpg',...
    '/Users/jalpanchal/drive/penn/robo599/simulator_media/0513/calibration/frame982_0513.jpg',...
    '/Users/jalpanchal/drive/penn/robo599/simulator_media/0513/calibration/frame1101_0513.jpg',...
    '/Users/jalpanchal/drive/penn/robo599/simulator_media/0513/calibration/frame1188_0513.jpg',...
    '/Users/jalpanchal/drive/penn/robo599/simulator_media/0513/calibration/frame1215_0513.jpg',...
    '/Users/jalpanchal/drive/penn/robo599/simulator_media/0513/calibration/frame1287_0513.jpg',...
    '/Users/jalpanchal/drive/penn/robo599/simulator_media/0513/calibration/frame1391_0513.jpg',...
    '/Users/jalpanchal/drive/penn/robo599/simulator_media/0429/calibration/frame1_0429.jpg',...
    };
% Detect checkerboards in images
[imagePoints, boardSize, imagesUsed] = detectCheckerboardPoints(imageFileNames);
imageFileNames = imageFileNames(imagesUsed);

% Read the first image to obtain image size
originalImage = imread(imageFileNames{1});
[mrows, ncols, ~] = size(originalImage);

% Generate world coordinates of the corners of the squares
squareSize = 23;  % in units of 'millimeters'
worldPoints = generateCheckerboardPoints(boardSize, squareSize);

% Calibrate the camera
[cameraParams, imagesUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', false, 'EstimateTangentialDistortion', false, ...
    'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'millimeters', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', [], ...
    'ImageSize', [mrows, ncols]);

% View reprojection errors
h1=figure; showReprojectionErrors(cameraParams);

% Visualize pattern locations
h2=figure; showExtrinsics(cameraParams, 'CameraCentric');

% Display parameter estimation errors
displayErrors(estimationErrors, cameraParams);

% For example, you can use the calibration data to remove effects of lens distortion.
undistortedImage = undistortImage(originalImage, cameraParams);

% See additional examples of how to use the calibration data.  At the prompt type:
% showdemo('MeasuringPlanarObjectsExample')
% showdemo('StructureFromMotionExample')
%% Compute R and T
[undistortedImage, newOrigin] = undistortImage(originalImage, cameraParams, 'OutputView', 'full');
magnification = 25;
% figure; imshow(undistortedImage, 'InitialMagnification', magnification);
[imagePoints, boardSize] = detectCheckerboardPoints(undistortedImage);
imagePoints = imagePoints + newOrigin; % adds newOrigin to every row of imagePoints
[R, t] = extrinsics(imagePoints, worldPoints, cameraParams);

%%
image_pix = [0,0;0,1080;1920,0;1920,1080];
mat_pix = [520,75;520,1007;1454,75;1454,1007];
center = mean([((mat_pix(2,:) + mat_pix(3,:)).'/2),((mat_pix(1,:) + mat_pix(4,:)).'/2)],2)'

mat_cen_world = pointsToWorld(cameraParams, R, t, center)
mat_cen_corners = pointsToWorld(cameraParams, R, t, mat_pix)
image_cen_corners = pointsToWorld(cameraParams, R, t, image_pix)
%% Fis eye
% Auto-generated by cameraCalibrator app on 13-May-2021
%-------------------------------------------------------


% Define images to process
imageFileNames = {'/Users/jalpanchal/drive/penn/robo599/simulator_media/0513/calibration/frame23_0513.jpg',...
    '/Users/jalpanchal/drive/penn/robo599/simulator_media/0513/calibration/frame134_0513.jpg',...
    '/Users/jalpanchal/drive/penn/robo599/simulator_media/0513/calibration/frame255_0513.jpg',...
    '/Users/jalpanchal/drive/penn/robo599/simulator_media/0513/calibration/frame534_0513.jpg',...
    '/Users/jalpanchal/drive/penn/robo599/simulator_media/0513/calibration/frame584_0513.jpg',...
    '/Users/jalpanchal/drive/penn/robo599/simulator_media/0513/calibration/frame698_0513.jpg',...
    '/Users/jalpanchal/drive/penn/robo599/simulator_media/0513/calibration/frame879_0513.jpg',...
    '/Users/jalpanchal/drive/penn/robo599/simulator_media/0513/calibration/frame1101_0513.jpg',...
    '/Users/jalpanchal/drive/penn/robo599/simulator_media/0513/calibration/frame1215_0513.jpg',...
    '/Users/jalpanchal/drive/penn/robo599/simulator_media/0513/calibration/frame1391_0513.jpg',...
    '/Users/jalpanchal/drive/penn/robo599/simulator_media/0429/calibration/frame1_0429.jpg',...
    '/Users/jalpanchal/drive/penn/robo599/simulator_media/0429/calibration/frame2_0429.jpg',...
    '/Users/jalpanchal/drive/penn/robo599/simulator_media/0429/calibration/frame3_0429.jpg',...
    };
% Detect checkerboards in images
[imagePoints, boardSize, imagesUsed] = detectCheckerboardPoints(imageFileNames);
imageFileNames = imageFileNames(imagesUsed);

% Read the first image to obtain image size
originalImage = imread(imageFileNames{1});
[mrows, ncols, ~] = size(originalImage);

% Generate world coordinates of the corners of the squares
squareSize = 23;  % in units of 'millimeters'
worldPoints = generateCheckerboardPoints(boardSize, squareSize);

% Calibrate the camera using fisheye parameters
[cameraParams, imagesUsed, estimationErrors] = estimateFisheyeParameters(imagePoints, worldPoints, ...
    [mrows, ncols], ...
    'EstimateAlignment', false, ...
    'WorldUnits', 'millimeters');

% View reprojection errors
h1=figure; showReprojectionErrors(cameraParams);

% Visualize pattern locations
h2=figure; showExtrinsics(cameraParams, 'CameraCentric');

% Display parameter estimation errors
displayErrors(estimationErrors, cameraParams);

% For example, you can use the calibration data to remove effects of lens distortion.
undistortedImage = undistortFisheyeImage(originalImage, cameraParams.Intrinsics);

% See additional examples of how to use the calibration data.  At the prompt type:
% showdemo('MeasuringPlanarObjectsExample')
% showdemo('StructureFromMotionExample')
%% Compute R and T
[undistortedImage, newOrigin] = undistortFisheyeImage(originalImage, cameraParams.Intrinsics)
[imagePoints, boardSize] = detectCheckerboardPoints(originalImage)
imagePoints = imagePoints + newOrigin; %x adds newOrigin to every row of imagePoints
[R, t] = extrinsics(imagePoints, worldPoints, cameraParams)


